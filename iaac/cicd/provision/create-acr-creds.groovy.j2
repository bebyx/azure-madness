import jenkins.model.*
import hudson.util.Secret
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.plugins.credentials.domains.*

def domain = Domain.global() // Global scope
def store = Jenkins.instance.getExtensionList(
    'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
)[0].getStore()

def credentialId = 'ACR_CREDS'
def username = '{{ acr_sp_id }}'
def password = '{{ acr_sp_password }}'

// Check if the credential already exists
def existingCreds = store.getCredentials(domain).find { it.id == credentialId }
if (existingCreds == null) {
    // Create the credentials
    def creds = new UsernamePasswordCredentialsImpl(
        CredentialsScope.GLOBAL,
        credentialId,
        "ACR Service Principal credentials",
        username,
        password
    )

    store.addCredentials(domain, creds)
    println "Credential with ID '${credentialId}' created successfully."
} else {
    println "Credential with ID '${credentialId}' already exists."
}
